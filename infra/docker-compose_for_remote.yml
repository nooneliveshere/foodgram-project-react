version: '3.3'
services:

  frontend:
    image: nooneliveshere/foodgram_frontend:latest
    container_name: frontend-container
    restart: always
    volumes:
      - ../frontend/:/app/result_build/

  nginx:
    image: nginx:1.19.3
    restart: always
    container_name: nginx-container
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - static_value:/var/html/backend_static/
      - media_value:/var/html/media/
      - le_value:/etc/letsencrypt
      - certbot_value:/var/www/certbot
    depends_on:
      - backend

  certbot:
    image: certbot/certbot
    container_name: certbot-container
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - le_value:/etc/letsencrypt
      - certbot_value:/var/www/certbot
    depends_on:
      - nginx

  backend:
    image: nooneliveshere/foodgram_backend:latest
    restart: always
    container_name: backend-container
    volumes:
      - static_value:/app/backend_static/
      - media_value:/app/media/
    depends_on:
      - db
    env_file:
      - .env

  db:
    image: postgres:13.0-alpine
    container_name: database-container
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    env_file:
      - .env

volumes:
  static_value:
  media_value:
  db_data:
  le_value:
  certbot_value:

